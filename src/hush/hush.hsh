use "compiler"

fn parse(input, name)
	IO.puts("Parsing file: " ~ name)
	.file = SrcFile(input, name)
	.compiler = Compiler(&file)

	loop
		if compiler.lexer.tok.type == Token.EndOfFile
			break

		IO.puts("Token: " ~ compiler.lexer.tok.type.str() ~ String.from_c(10) ~ compiler.lexer.src().format())
		compiler.lexer.step()

	compiler.errors.each -> |error|
		IO.puts("Error: " ~ error.format())

export fn main() -> c_int
	match File.read("test.hsh") as r
		when Option.Some
			parse(r.val, "test.hsh")
		when Option.Nil
			IO.puts("Failed to read file")
	return 0