use "source"

data Error
	SrcLoc* src

	when UnknownChars
	when NullChar
	when IndentMismatch
		SrcLoc* start
	when UnknownIndent
		SrcLoc* start
	when ExpectedToken
		Token tok
		String[Region] found 
	when ExpectedString
		String[Region] exp 

	fn str() -> String
		return match self as err
			when UnknownChars
				"Unexpected character(s)"
			when NullChar
				"Unexpected null-terminator"
			when IndentMismatch
				"Mismatching indentation"
			when UnknownIndent
				"Unable to find indentation size"
			when ExpectedToken
				"Expected " ~ err.tok.str() ~ ", but found " ~ err.found.copy(Mem())
			when ExpectedString
				"Expected " ~ err.exp.copy(Mem())

	fn trailing() -> String
		return match self as err
			when IndentMismatch
				String.from_c(10) ~ "Relative to baseline:" ~ String.from_c(10) ~ err.start.format()
			when UnknownIndent
				String.from_c(10) ~ "Relative to baseline:" ~ String.from_c(10) ~ err.start.format()
			else
				""

	fn format()
		return str() ~ String.from_c(10) ~ src.format() ~ trailing()